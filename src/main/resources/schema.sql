DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS film_user;
DROP TABLE IF EXISTS film;
DROP TABLE IF EXISTS friendship;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS mpa;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS mpa
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(10) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(100) NOT NULL,
    description  TEXT         NOT NULL,
    release_date DATE         NOT NULL,
    duration     INTEGER      NOT NULL,
    mpa_id       INTEGER REFERENCES mpa (id) ON DELETE RESTRICT,
    CONSTRAINT check_duration CHECK (duration > 0)
);

CREATE TABLE IF NOT EXISTS users
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR NOT NULL UNIQUE,
    login    VARCHAR NOT NULL UNIQUE,
    name     VARCHAR,
    birthday DATE    NOT NULL
);

CREATE TABLE IF NOT EXISTS genre
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  INTEGER NOT NULL REFERENCES film (id) ON DELETE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genre (id) ON DELETE RESTRICT,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS film_user
(
    film_id INTEGER NOT NULL REFERENCES film (id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friendship
(
    user_id      INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    friend_id    INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    is_confirmed BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (user_id, friend_id)
);